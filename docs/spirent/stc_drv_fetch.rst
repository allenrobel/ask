**************************************************
StcDrvFetch() - spirent/stc_drv_fetch.py
**************************************************

.. contents::
   :local:
   :depth: 1

ScriptKit Synopsis
------------------
StcDrvFetch() retrieves results from a named Dynamic Result View (DRV).

It generates Ansible task instances conformant with Spirent's
Ansible implementation for their LabServer + TestCenter products.
These task instances can then be passed to Playbook().add_task()

Ansible Module Documentation
----------------------------

    - `Spirent stc-ansible <https://github.com/Spirent/stc-ansible>`_

Prerequisites
-------------

    1.  To run the playbook generated by StcDrvFetch(),
        `Spirent stc-ansible <https://github.com/Spirent/stc-ansible>`_ 
        and its dependencies (e.g. paramiko) must be installed.

ScriptKit Example
-----------------

    - `unit_test/spirent/unit_test_stc_drv_fetch.py <https://github.com/allenrobel/ask/blob/main/unit_test/spirent/unit_test_stc_drv_fetch.py>`_

Properties
----------

====================================    ==================================================
Property                                Description
====================================    ==================================================
drv_name                                Name of the Dynamic Result View to delete::

                                            - Type: str()
                                            - Spirent name: na
                                            - Default: 'Dropped Frames DRV'
                                            - Examples:
                                                - task.drv_name = 'my DRV'

register                                Ansible register into which to store the DRV results::

                                            - Type: str()
                                            - Spirent name: register
                                            - Examples:
                                                - task.register = 'RxResults'

reset_existing                          Reset any existing DRV results::

                                            - Type: bool()
                                            - Valid values: False, True
                                            - Default: False
                                            - Spirent name: reset_existing
                                            - Examples:
                                                - task.reset_existing = True

====================================    ==================================================
